import * as fs from 'fs';
import * as path from 'path';

/**
 * Terraform „Éà„Éº„ÇØ„É≥„Çí„É¶„Éº„Ç∂„Éº„Éï„É¨„É≥„Éâ„É™„Éº„Å™ÂΩ¢Âºè„Å´Â§âÊèõ
 */
function sanitizeTfToken(value: string): string {
  if (typeof value === 'string' && value.includes('${TfToken[')) {
    return '[tfvars „Åã„Çâ„ÅÆÂÄ§]';
  }
  return value;
}

export interface MarkdownSection {
  title: string;
  content: string;
  level: number; // 1-6 for heading levels
}

export interface GoogleOAuthChecklistData {
  projectId: string;
  environment: string;
  displayName: string;
  supportEmail: string;
  cloudflareTeamDomain: string;
  redirectUri: string;
  domainName: string;
  subdomainName: string;
  validationResults?: any;
}

// Ê§úË®ºÁµêÊûú„ÅÆÂûã„Å®„Çµ„Éã„Çø„Ç§„Ç∫
type OAuthClientAuthStatus = 'accepted' | 'invalid' | 'skipped' | 'error';
interface ServiceAccountPermsRes {
  status: string;
  detail?: string;
  missing?: string[];
  granted?: string[];
  checked?: string[];
}
interface ValidationResults {
  clientIdValid?: boolean;
  clientSecretValid?: boolean;
  projectNumberMatches?: boolean;
  validationErrors?: string[];
  validationWarnings?: string[];
  serviceAccountEmail?: string;
  extractedProjectNumber?: string;
  resolvedProjectNumber?: string;
  resolvedProjectNumberStatus?: string;
  resolvedProjectNumberDetail?: string;
  oauthClientAuth?: { status: OAuthClientAuthStatus; detail?: string };
  serviceAccountPermissions?: ServiceAccountPermsRes;
}

function toStringArray(v: unknown): string[] {
  return Array.isArray(v) ? v.filter((x): x is string => typeof x === 'string') : [];
}

function sanitizeValidationResults(input: unknown): ValidationResults {
  const src = (typeof input === 'object' && input !== null ? input : {}) as Record<string, unknown>;
  const out: ValidationResults = {};
  out.clientIdValid = Boolean(src.clientIdValid);
  out.clientSecretValid = Boolean(src.clientSecretValid);
  out.projectNumberMatches = Boolean(src.projectNumberMatches);
  out.validationErrors = toStringArray(src.validationErrors);
  out.validationWarnings = toStringArray(src.validationWarnings);
  out.serviceAccountEmail = typeof src.serviceAccountEmail === 'string' ? src.serviceAccountEmail : undefined;
  out.extractedProjectNumber = typeof src.extractedProjectNumber === 'string' ? src.extractedProjectNumber : undefined;
  out.resolvedProjectNumber = typeof src.resolvedProjectNumber === 'string' ? src.resolvedProjectNumber : undefined;
  out.resolvedProjectNumberStatus =
    typeof src.resolvedProjectNumberStatus === 'string' ? src.resolvedProjectNumberStatus : undefined;
  out.resolvedProjectNumberDetail =
    typeof src.resolvedProjectNumberDetail === 'string' ? src.resolvedProjectNumberDetail : undefined;
  if (src.oauthClientAuth && typeof src.oauthClientAuth === 'object') {
    const a = src.oauthClientAuth as Record<string, unknown>;
    const status = a.status;
    if (status === 'accepted' || status === 'invalid' || status === 'skipped' || status === 'error') {
      out.oauthClientAuth = { status, detail: typeof a.detail === 'string' ? a.detail : undefined } as {
        status: OAuthClientAuthStatus;
        detail?: string;
      };
    }
  }
  if (src.serviceAccountPermissions && typeof src.serviceAccountPermissions === 'object') {
    const p = src.serviceAccountPermissions as Record<string, unknown>;
    out.serviceAccountPermissions = {
      status: typeof p.status === 'string' ? p.status : 'error',
      detail: typeof p.detail === 'string' ? p.detail : undefined,
      missing: toStringArray(p.missing),
      granted: toStringArray(p.granted),
      checked: toStringArray(p.checked),
    };
  }
  return out;
}

/**
 * Google OAuthË®≠ÂÆö„ÉÅ„Çß„ÉÉ„ÇØ„É™„Çπ„Éà„ÇíMarkdown„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶Âá∫Âäõ
 */
export function generateOAuthChecklistMarkdown(data: GoogleOAuthChecklistData): string {
  const sections: MarkdownSection[] = [];

  // Header
  sections.push({
    title: `Google OAuth Ë®≠ÂÆö„ÉÅ„Çß„ÉÉ„ÇØ„É™„Çπ„Éà - ${data.environment}Áí∞Â¢É`,
    level: 1,
    content: `
- **„Éó„É≠„Ç∏„Çß„ÇØ„Éà**: ${sanitizeTfToken(data.projectId)}
- **Áí∞Â¢É**: ${data.environment}
- **ÁîüÊàêÊó•ÊôÇ**: ${new Date().toLocaleString('ja-JP')}
`,
  });

  // Ê§úË®ºÁµêÊûú„Çª„ÇØ„Ç∑„Éß„É≥
  if (data.validationResults) {
    sections.push({
      title: 'üîç Ëá™ÂãïÊ§úË®ºÁµêÊûú',
      level: 2,
      content: generateValidationResultsMarkdown(sanitizeValidationResults(data.validationResults)),
    });
  }

  // ÊâãÂãïÁ¢∫Ë™ç„Çª„ÇØ„Ç∑„Éß„É≥Ôºà„Ç¨„Ç§„ÉÄ„É≥„Çπ„ÅÆÂâçÂè£‰∏äÔºâ
  sections.push({
    title: 'üß≠ ÊâãÂãïÁ¢∫Ë™ç‰∫ãÈ†Ö',
    level: 2,
    content: `
‰ª•‰∏ã„ÅÆÈ†ÖÁõÆ„ÅØ Google Cloud Console „ÅÆÁîªÈù¢„Åß„ÅÆÊâãÂãïÁ¢∫Ë™ç„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ

- Ë®≠ÂÆö„ÅÆÂÜÖÂÆπ„ÉªÊúâÂäπÂåñÁä∂ÊÖã„ÉªÂÖ•Âäõ„Éü„Çπ„Å™„Å©„ÅØ UI ‰∏ä„ÅßÁ¢∫Ë™ç„Éª‰øÆÊ≠£„Åó„Å¶„Åè„Å†„Åï„ÅÑ
- Êú¨„Éï„Ç°„Ç§„É´„ÅØ„ÉÅ„Çß„ÉÉ„ÇØ„É™„Çπ„Éà„Å®„Åó„Å¶„ÅîÂà©Áî®„Åè„Å†„Åï„ÅÑÔºàÂøÖË¶Å„Å´Âøú„Åò„Å¶ Markdown „ÅßÈÄ≤Êçó„ÉÅ„Çß„ÉÉ„ÇØÔºâ
`,
  });

  // APIÊúâÂäπÂåñÁ¢∫Ë™ç
  sections.push({
    title: 'üìã ÂøÖÈ†àAPIÊúâÂäπÂåñÁ¢∫Ë™ç',
    level: 2,
    content: `
‰ª•‰∏ã„ÅÆAPI„ÅåGoogle Cloud Console„ÅßÊúâÂäπÂåñ„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

**Á¢∫Ë™çURL**: [APIs & Services > Library](https://console.cloud.google.com/apis/library?project=${sanitizeTfToken(
      data.projectId,
    )})

- [ ] **Cloud Resource Manager API** (cloudresourcemanager.googleapis.com)

> üí° **Ë£úË∂≥**
> - OAuth 2.0 „ÅÆ„Éà„Éº„ÇØ„É≥„Ç®„É≥„Éâ„Éù„Ç§„É≥„ÉàÔºàoauth2.googleapis.comÔºâ„ÅØÂÄãÂà•„ÅÆAPIÊúâÂäπÂåñ„ÅØ‰∏çË¶Å„Åß„Åô
> - „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„Éà„ÇÑÊ®©ÈôêÈÅãÁî®„ÇíË°å„ÅÜÂ†¥Âêà„ÅØ„ÄÅÊ¨°„ÅÆAPI„Åå„ÅÇ„Çã„Å®‰æøÂà©„Åß„ÅôÔºàÂøÖË¶Å„Å´Âøú„Åò„Å¶Ôºâ:
>   - **Identity and Access Management (IAM) API** (iam.googleapis.com)
>   - **IAM Service Account Credentials API** (iamcredentials.googleapis.com)
`,
  });

  // OAuthÂêåÊÑèÁîªÈù¢Ë®≠ÂÆö
  sections.push({
    title: 'üîê OAuthÂêåÊÑèÁîªÈù¢Ë®≠ÂÆöÁ¢∫Ë™ç',
    level: 2,
    content: `
**Á¢∫Ë™çURL**: [OAuthÂêåÊÑèÁîªÈù¢](https://console.cloud.google.com/apis/credentials/consent?project=${sanitizeTfToken(
      data.projectId,
    )})

### Âü∫Êú¨Ë®≠ÂÆö

„Éñ„É©„É≥„Éá„Ç£„É≥„Ç∞„ÅÆ„É°„Éã„É•„ÉºÈÅ∏Êäû

- [ ] **„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥Âêç**: \`${sanitizeTfToken(data.displayName)}\`
- [ ] **„Çµ„Éù„Éº„Éà„É°„Éº„É´**: \`${sanitizeTfToken(data.supportEmail)}\`
- [ ] **ÂÖ¨Èñã„Çπ„ÉÜ„Éº„Çø„Çπ**: Êú¨Áï™ÈÅãÁî®ÊôÇ„ÅØ„ÄåÊú¨Áï™Áí∞Â¢É„Äç„Å´Ë®≠ÂÆö

### „Çπ„Ç≥„Éº„ÉóË®≠ÂÆö

„Éá„Éº„Çø„Ç¢„ÇØ„Çª„Çπ„ÅÆ„É°„Éã„É•„ÉºÈÅ∏Êäû

- [ ] **../auth/userinfo.email** „ÅåËøΩÂä†Ê∏à„Åø
- [ ] **openid** „ÅåËøΩÂä†Ê∏à„Åø

> ‚ö†Ô∏è **Ê≥®ÊÑè**: „Çπ„Ç≥„Éº„ÉóË®≠ÂÆö„Åå‰∏çÈÅ©Âàá„Å†„Å®Cloudflare Access„Åß„ÅÆË™çË®º„Å´Â§±Êïó„Åó„Åæ„Åô

### „ÇØ„É©„Ç§„Ç¢„É≥„ÉàË®≠ÂÆö

1. „ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÅÆ„É°„Éã„É•„ÉºÈÅ∏Êäû
2. ‰ΩúÊàê„Åó„Åü OAuth 2.0 „ÇØ„É©„Ç§„Ç¢„É≥„Éà ID „ÇíÈÅ∏Êäû

- [ ] **ÊâøË™çÊ∏à„Åø„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„ÉàURI**„Å´‰ª•‰∏ã„ÅåË®≠ÂÆöÊ∏à„Åø:
  \`\`\`
  ${data.redirectUri}
  \`\`\`

**Ë™çË®ºÊÉÖÂ†±„Å´„Å§„ÅÑ„Å¶**

„ÇØ„É©„Ç§„Ç¢„É≥„ÉàID„Å®„ÇØ„É©„Ç§„Ç¢„É≥„Éà„Ç∑„Éº„ÇØ„É¨„ÉÉ„Éà„Çí„ÄÅtfvars „Å´Ë®≠ÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

**terraform.${data.environment}.tfvars „Å∏„ÅÆË®òÂÖ•‰æã**:

> \`\`\`
> google_client_id = "123456789-abc.apps.googleusercontent.com"
> google_client_secret = "GOCSPX-your-secret-here"
> \`\`\`

> ‚ö†Ô∏è **Ê≥®ÊÑè**: „ÇØ„É©„Ç§„Ç¢„É≥„Éà„Ç∑„Éº„ÇØ„É¨„ÉÉ„Éà„ÅÆË°®Á§∫„Å®„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÅØ„Åß„Åç„Åæ„Åõ„Çì„ÄÇ
> ÂàùÂõû„Å´‰ΩúÊàê„Åó„Åü„Ç∑„Éº„ÇØ„É¨„ÉÉ„Éà„ÇíÁ¥õÂ§±„Åó„ÅüÂ†¥Âêà„ÅØ„ÄÅÊñ∞„Åó„ÅÑ„Ç∑„Éº„ÇØ„É¨„ÉÉ„Éà„ÇíËøΩÂä†„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
`,
  });

  // „ÉÜ„Çπ„ÉàÊâãÈ†Ü
  sections.push({
    title: '‚úÖ Ë®≠ÂÆöÂÆå‰∫ÜÂæå„ÅÆ„ÉÜ„Çπ„ÉàÊâãÈ†Ü',
    level: 2,
    content: `
1. **terraform.tfvars„ÅÆÊõ¥Êñ∞**
   - Client ID„Å®Client Secret„ÇíË®≠ÂÆö

2. **Cloudflare Stack„ÅÆ„Éá„Éó„É≠„Ç§**
   \`\`\`bash
   STACK=cloudflare ENVIRONMENT=${data.environment} npm run deploy:${data.environment}
   \`\`\`

3. **ÂÆüÈöõ„ÅÆGoogleË™çË®º„Éï„É≠„Éº„Çí„ÉÜ„Çπ„Éà**
   - https://${sanitizeTfToken(data.subdomainName)}.${sanitizeTfToken(data.domainName)} „Å´„Ç¢„ÇØ„Çª„Çπ
   - GoogleË™çË®º„ÅåÊ≠£Â∏∏„Å´Âãï‰Ωú„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
   - ÊåáÂÆö„Åó„Åü„É°„Éº„É´„Éâ„É°„Ç§„É≥„ÅÆ„É¶„Éº„Ç∂„Éº„ÅÆ„Åø„Ç¢„ÇØ„Çª„ÇπÂèØËÉΩ„Åß„ÅÇ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
`,
  });

  // „Éà„É©„Éñ„É´„Ç∑„É•„Éº„ÉÜ„Ç£„É≥„Ç∞
  sections.push({
    title: 'üõ†Ô∏è „Éà„É©„Éñ„É´„Ç∑„É•„Éº„ÉÜ„Ç£„É≥„Ç∞',
    level: 2,
    content: `
### „Çà„Åè„ÅÇ„ÇãÂïèÈ°å„Å®Ëß£Ê±∫ÊñπÊ≥ï

#### ‚ùå „É™„ÉÄ„Ç§„É¨„ÇØ„ÉàURI„Ç®„É©„Éº
**ÁóáÁä∂**: "redirect_uri_mismatch" „Ç®„É©„Éº
**Ëß£Ê±∫**: OAuth„ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„ÉàURI„ÅåÊ≠£Á¢∫„Å´Ë®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç

#### ‚ùå „Çπ„Ç≥„Éº„Éó„Ç®„É©„Éº
**ÁóáÁä∂**: "insufficient_scope" „Ç®„É©„Éº
**Ëß£Ê±∫**: OAuthÂêåÊÑèÁîªÈù¢„Åßuserinfo.email„Å®openid„Çπ„Ç≥„Éº„Éó„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç

#### ‚ùå „Ç¢„ÇØ„Çª„ÇπÊãíÂê¶„Ç®„É©„Éº
**ÁóáÁä∂**: Ë™çË®ºÂæå„Å´„Ç¢„ÇØ„Çª„Çπ„ÅåÊãíÂê¶„Åï„Çå„Çã
**Ëß£Ê±∫**: Cloudflare Access„ÅÆË®≠ÂÆö„Åßallowed_email_domain„ÅåÊ≠£„Åó„ÅèË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç

### „Çµ„Éù„Éº„ÉàÊÉÖÂ†±
- **„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁÆ°ÁêÜ**: [Google Cloud Console](https://console.cloud.google.com/home/dashboard?project=${sanitizeTfToken(
      data.projectId,
    )})
- **„Åì„ÅÆË®≠ÂÆö„ÅÆÊõ¥Êñ∞**: \`STACK=google ENVIRONMENT=${data.environment} npm run deploy:${data.environment}\`
`,
  });

  // Markdown„ÇíÁîüÊàê
  return sections
    .map(section => {
      const headingPrefix = '#'.repeat(section.level);
      return `${headingPrefix} ${section.title}\n\n${section.content.trim()}\n\n`;
    })
    .join('');
}

function generateValidationResultsMarkdown(validationResults: ValidationResults): string {
  let content = '';

  if (validationResults.clientIdValid) {
    content += '‚úÖ **Client ID „ÅÆÂΩ¢Âºè**: Ê≠£Â∏∏\n';
  }
  if (validationResults.clientSecretValid) {
    content += '‚úÖ **Client Secret „ÅÆÂΩ¢Âºè**: Ê≠£Â∏∏\n';
  }
  if (validationResults.projectNumberMatches) {
    content += '‚úÖ **Project Number „ÅÆÊï¥ÂêàÊÄß**: Ê≠£Â∏∏\n';
  }

  if (validationResults.validationErrors && validationResults.validationErrors.length > 0) {
    content += '\n**‚ùå „Ç®„É©„Éº**:\n';
    for (const error of validationResults.validationErrors) content += `- ${error}\n`;
  }

  if (validationResults.validationWarnings && validationResults.validationWarnings.length > 0) {
    content += '\n**‚ö†Ô∏è Ë≠¶Âëä**:\n';
    for (const warning of validationResults.validationWarnings) content += `- ${warning}\n`;
  }

  // ËøΩÂä†: ÊØîËºÉ„Å´‰ΩøÁî®„Åó„ÅüÂÄ§„ÅÆÂá∫ÂäõÔºàËß£Ê±∫„Åß„Åç„ÅüÂ†¥Âêà„ÅÆ„ÅøË°®Á§∫Ôºâ
  if (validationResults.resolvedProjectNumber !== undefined) {
    const extracted = validationResults.extractedProjectNumber ?? '(‰∏çÊòé)';
    const resolved = validationResults.resolvedProjectNumber;
    const cmp = validationResults.projectNumberMatches ? '‰∏ÄËá¥' : '‰∏ç‰∏ÄËá¥';
    content += `\n**ÊØîËºÉË©≥Á¥∞**\n- Client ID ÂÖàÈ†≠Êï∞ÂÄ§: ${extracted}\n- Ëß£Ê±∫„Åó„Åü Project Number: ${resolved}\n- ÊØîËºÉÁµêÊûú: ${cmp}\n`;
  }

  // ËøΩÂä†: OAuth „ÇØ„É©„Ç§„Ç¢„É≥„ÉàË™çË®º„ÅÆÁ∞°Êòì„ÉÅ„Çß„ÉÉ„ÇØÁµêÊûú
  if (validationResults.oauthClientAuth) {
    const s = validationResults.oauthClientAuth.status;
    if (s === 'accepted') content += '\n‚úÖ **OAuth „ÇØ„É©„Ç§„Ç¢„É≥„ÉàË™çË®º**: Âèó‰ªòÊ∏à„ÅøÔºàinvalid_grant Á≠â„ÅØÊÉ≥ÂÆö„Å©„Åä„ÇäÔºâ\n';
    else if (s === 'invalid') content += '\n‚ùå **OAuth „ÇØ„É©„Ç§„Ç¢„É≥„ÉàË™çË®º**: ÁÑ°ÂäπÔºàinvalid_clientÔºâ\n';
    else if (s === 'skipped') content += '\n‚ÑπÔ∏è **OAuth „ÇØ„É©„Ç§„Ç¢„É≥„ÉàË™çË®º**: „Çπ„Ç≠„ÉÉ„ÉóÔºàË≥áÊ†ºÊÉÖÂ†±‰∏çË∂≥/„Çπ„ÇØ„É™„Éó„ÉàÊú™ÈÖçÁΩÆÔºâ\n';
    else content += '\n‚ö†Ô∏è **OAuth „ÇØ„É©„Ç§„Ç¢„É≥„ÉàË™çË®º**: „Ç®„É©„ÉºÔºà„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÇÑÂà∂Èôê„ÅÆÂèØËÉΩÊÄßÔºâ\n';
  }

  // ËøΩÂä†: „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„ÉàË®∫Êñ≠ÔºàÊ≠£Â∏∏ÊôÇÔºâ
  if (validationResults.resolvedProjectNumberStatus === 'ok') {
    const email: string = validationResults.serviceAccountEmail || '(‰∏çÊòé)';
    const pn: string = validationResults.resolvedProjectNumber || '';
    content += '\n## ‚úÖ „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„ÉàË™çË®º\n';
    content += `- „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„Éà: ${email}\n`;
    if (pn) content += `- „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁï™Âè∑„ÅÆÂèñÂæó: ÊàêÂäüÔºà${pn}Ôºâ\n`;
    const saPerm = validationResults.serviceAccountPermissions;
    if (saPerm && saPerm.status === 'ok') {
      const checked = Array.isArray(saPerm.checked) ? saPerm.checked : [];
      const granted = Array.isArray(saPerm.granted) ? saPerm.granted : [];
      if (checked.length) content += `- „ÉÅ„Çß„ÉÉ„ÇØ„Åó„ÅüÊ®©Èôê: ${checked.join(', ')}\n`;
      if (granted.length) content += `- ‰ªò‰∏éÊ∏à„ÅøÊ®©Èôê: ${granted.join(', ')}\n`;
    }
  }

  // ËøΩÂä†: „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„ÉàË®∫Êñ≠ÔºàË™çË®º„Ç®„É©„Éº„ÇíÊòéÁ¢∫ÂåñÔºâ
  if (validationResults.resolvedProjectNumberStatus === 'auth_error') {
    const detail: string = validationResults.resolvedProjectNumberDetail || '';
    const email: string = validationResults.serviceAccountEmail || '(Service Account Email: ‰∏çÊòé)';
    content += '\n\n## ‚ùå „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„ÉàË™çË®º„Ç®„É©„Éº\n';
    content += `- „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„Éà: ${email}\n`;
    if (detail) content += `- „Ç®„É©„ÉºË©≥Á¥∞: ${detail}\n`;

    const lower = detail.toLowerCase();
    if (lower.includes('account not found')) {
      content += '- Êé®ÂÆöÂéüÂõ†: „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„Éà„ÅåÂâäÈô§/Â≠òÂú®„Åó„Å™„ÅÑ„ÄÅ„Åæ„Åü„ÅØ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅåÁï∞„Å™„Çã\n';
    } else if (lower.includes('invalid jwt signature')) {
      content += '- Êé®ÂÆöÂéüÂõ†: „Ç≠„Éº„ÅÆ‰∏ç‰∏ÄËá¥ÔºàÈçµ„ÅåÂè§„ÅÑ/Âà•„ÅÆSA„ÅÆÈçµÔºâ\n';
    }

    content += '\n### ÂØæÂá¶ÊâãÈ†Ü\n';
    content += '1. **Google Cloud Console „Åß„Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„ÉàÁ¢∫Ë™ç**\n';
    content += `   - [„Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„Éà‰∏ÄË¶ß](https://console.cloud.google.com/iam-admin/serviceaccounts)„Åß \`${email}\` „ÅåÂ≠òÂú®„Åô„Çã„ÅãÁ¢∫Ë™ç\n`;
    content += '   - ÂâäÈô§„Åï„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØÊñ∞„Åó„ÅÑ„Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„Éà„Çí‰ΩúÊàê\n';
    content += '2. **Êñ∞„Åó„ÅÑ„Ç≠„Éº„ÅÆÁîüÊàê**\n';
    content += `   - [„Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„ÉàË©≥Á¥∞](https://console.cloud.google.com/iam-admin/serviceaccounts/details/${encodeURIComponent(
      email,
    )})„Åß„Äå„Ç≠„Éº„Äç„Çø„Éñ„ÇíÈÅ∏Êäû\n`;
    content += '   - „Äå„Ç≠„Éº„ÇíËøΩÂä†„Äç‚Üí„ÄåÊñ∞„Åó„ÅÑ„Ç≠„Éº„Çí‰ΩúÊàê„Äç‚Üí„ÄåJSON„Äç„ÇíÈÅ∏Êäû„Åó„Å¶„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ\n';
    content += '3. **Ë™çË®ºÊÉÖÂ†±„ÅÆË®≠ÂÆö**\n';
    content += '   - „ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„ÅüJSON„Éï„Ç°„Ç§„É´„ÅÆÂÜÖÂÆπ„Çí `.env` „ÅÆ `GOOGLE_CREDENTIALS` „Å´Ë®≠ÂÆöÔºàÊîπË°å‰øùÊåÅÔºâ\n';
    content += '   - „Åæ„Åü„ÅØ `GOOGLE_APPLICATION_CREDENTIALS` Áí∞Â¢ÉÂ§âÊï∞„ÅßJSON„Éï„Ç°„Ç§„É´„Éë„Çπ„ÇíÊåáÂÆö\n';
  }

  // ËøΩÂä†: „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„ÉàË®∫Êñ≠ÔºàÊ®©Èôê‰∏çË∂≥Ôºâ
  if (validationResults.resolvedProjectNumberStatus === 'perm_error') {
    const detail: string = validationResults.resolvedProjectNumberDetail || '';
    const email: string = validationResults.serviceAccountEmail || '(‰∏çÊòé)';
    content += '\n\n## ‚ùå „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„ÉàÊ®©Èôê‰∏çË∂≥\n';
    content += `- „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„Éà: ${email}\n`;
    if (detail) content += `- Ë©≥Á¥∞: ${detail}\n`;
    const saPermAll = validationResults.serviceAccountPermissions;
    if (saPermAll) {
      const checkedAll = Array.isArray(saPermAll.checked) ? saPermAll.checked : [];
      const grantedAll = Array.isArray(saPermAll.granted) ? saPermAll.granted : [];
      if (checkedAll.length) content += `- „ÉÅ„Çß„ÉÉ„ÇØ„Åó„ÅüÊ®©Èôê: ${checkedAll.join(', ')}\n`;
      if (grantedAll.length) content += `- ‰ªò‰∏éÊ∏à„ÅøÊ®©Èôê: ${grantedAll.join(', ')}\n`;
    }
    const saPerm = validationResults.serviceAccountPermissions;
    if (saPerm && saPerm.missing && saPerm.missing.length > 0) {
      content += `- ‰∏çË∂≥„Åó„Å¶„ÅÑ„ÇãÊ®©Èôê: ${saPerm.missing.join(', ')}\n`;
    } else if (detail.startsWith('missing_permissions:')) {
      const list = detail.replace('missing_permissions:', '').split(',').filter(Boolean);
      if (list.length) content += `- ‰∏çË∂≥„Åó„Å¶„ÅÑ„ÇãÊ®©Èôê: ${list.join(', ')}\n`;
    }
    content += '\n### ÂØæÂá¶ÊâãÈ†Ü\n';
    content += '1. **Google Cloud Console „ÅßIAMÊ®©Èôê„ÇíÁ¢∫Ë™ç„ÉªËøΩÂä†**\n';
    content += `   - [IAMÊ®©ÈôêÁÆ°ÁêÜ](https://console.cloud.google.com/iam-admin/iam)„Åß„Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„Éà \`${email}\` „ÇíÊ§úÁ¥¢\n`;

    let missingPerms: string[] = [];
    if (saPerm && saPerm.missing) {
      missingPerms = saPerm.missing;
    } else if (detail.startsWith('missing_permissions:')) {
      missingPerms = detail.replace('missing_permissions:', '').split(',').filter(Boolean);
    }

    if (missingPerms.length > 0) {
      content += '2. **‰∏çË∂≥„Åó„Å¶„ÅÑ„ÇãÊ®©Èôê„ÇíÂÄãÂà•„Å´ËøΩÂä†**\n';
      missingPerms.forEach((perm, index) => {
        content += `   ${index + 1}. \`${perm.trim()}\`\n`;
      });
      content += '3. **Êé®Â•®„É≠„Éº„É´**\n';
      if (missingPerms.some(p => p.includes('resourcemanager.projects'))) {
        content += '   - **Project Browser** „Åæ„Åü„ÅØ **Project Viewer** „É≠„Éº„É´„Çí‰ªò‰∏é\n';
      }
      if (missingPerms.some(p => p.includes('iam'))) {
        content += '   - **Security Reviewer** „É≠„Éº„É´ÔºàIAMÈñ¢ÈÄ£„ÅÆÂèÇÁÖßÁî®Ôºâ\n';
      }
    } else {
      content += '2. **Êé®Â•®„É≠„Éº„É´**\n';
      content += '   - **Project Viewer** „É≠„Éº„É´ÔºàË™≠„ÅøÂèñ„ÇäÂ∞ÇÁî®„Åß„ÅÆÊ§úË®ºÁî®ÈÄîÔºâ\n';
      content += '   - „Åæ„Åü„ÅØ **Project Browser** „É≠„Éº„É´Ôºà„Çà„ÇäÈôêÂÆöÁöÑ„Å™Ê®©ÈôêÔºâ\n';
    }
    content += '\n> üí° **„Éí„É≥„Éà**: Ê§úË®º„ÉÑ„Éº„É´Áî®ÈÄî„Å™„ÅÆ„ÅßÊúÄÂ∞èÊ®©ÈôêÔºàË™≠„ÅøÂèñ„Çä„ÅÆ„ÅøÔºâ„ÅßÂçÅÂàÜ„Åß„Åô\n';
  }

  content +=
    '\n> üìã **Ë£úË∂≥**: Client ID ÂÖàÈ†≠„ÅÆÊï∞ÂÄ§„ÅØ Project Number „Åß„Åô„ÄÇclient_id/secret „ÅÆÊúâÂäπÊÄß„ÅØ„Éà„Éº„ÇØ„É≥„Ç®„É≥„Éâ„Éù„Ç§„É≥„ÉàÂøúÁ≠î„ÅßÁ∞°ÊòìÁ¢∫Ë™ç„Åó„Å¶„ÅÑ„Åæ„ÅôÔºàinvalid_grant=ÂèóÁêÜ„ÄÅinvalid_client=ÁÑ°ÂäπÔºâ„ÄÇ\n';

  return content;
}

/**
 * Markdown„Éï„Ç°„Ç§„É´„ÇíÊåáÂÆö„Éë„Çπ„Å´Âá∫Âäõ
 */
export function writeMarkdownFile(filePath: string, content: string): void {
  const dir = path.dirname(filePath);
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }
  fs.writeFileSync(filePath, content, 'utf8');
}

/**
 * Google OAuthË®≠ÂÆö„ÉÅ„Çß„ÉÉ„ÇØ„É™„Çπ„Éà„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê„ÉªÂá∫Âäõ
 */
export function generateAndWriteOAuthChecklist(data: GoogleOAuthChecklistData, outputPath?: string): string {
  const markdown = generateOAuthChecklistMarkdown(data);
  const defaultPath = `oauth-checklist-${data.environment}-${Date.now()}.md`;
  const filePath = outputPath || defaultPath;

  writeMarkdownFile(filePath, markdown);
  return filePath;
}
